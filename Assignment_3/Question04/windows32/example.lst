Microsoft (R) Macro Assembler Version 14.20.27508.1	    05/25/19 12:42:51
example.asm						     Page 1 - 1


				;Program to evaluate the expression 
				;f(x, y, z) = x^4 + y^3 + z + z*(x + y)^4
				; Author:  Arturo A. Serdan
				; Date:    05/26/2019

				.586
				.MODEL FLAT

				INCLUDE io.h            ; header file for input/output
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 

				.STACK 4096

 00000000			.DATA
 00000000 00000000		x DWORD   ?
 00000004 00000000		y DWORD   ?
 00000008 00000000		z DWORD   ?
 0000000C 00000000		f DWORD	  ?
 00000010 00000000		xy DWORD  ?
 00000014 45 6E 74 65 72	prompt1 BYTE    "Enter x", 0
	   20 78 00
 0000001C 45 6E 74 65 72	prompt2 BYTE    "Enter y", 0
	   20 79 00
 00000024 45 6E 74 65 72	prompt3 BYTE    "Enter z", 0
	   20 7A 00
 0000002C  00000028 [		string  BYTE    40 DUP (?)
	    00
	   ]
 00000054 54 68 65 20 72	resultLbl BYTE  "The result for the expression", 0
	   65 73 75 6C 74
	   20 66 6F 72 20
	   74 68 65 20 65
	   78 70 72 65 73
	   73 69 6F 6E 00
 00000072  0000000B [		expr     BYTE    11 DUP (?), 0
	    00
	   ] 00

 00000000			.CODE
 00000000			_MainProc PROC
				        input   prompt1, string, 40      ; read ASCII characters
				        atod    string          ; convert to integer
 0000002D  A3 00000000 R	        mov     x, eax    ; store in memory

				        input   prompt2, string, 40      ; repeat for y
				        atod    string
 0000005F  A3 00000004 R	        mov     y, eax

						input   prompt3, string, 40      ; repeat for z
				        atod    string
 00000091  A3 00000008 R	        mov     z, eax

 00000096  A1 00000000 R			mov eax, x						 ; moves x into eax to multiply x to get x^4
 0000009B  F7 2D 00000000 R			imul x							 
 000000A1  F7 2D 00000000 R			imul x							 
 000000A7  F7 2D 00000000 R			imul x							 
 000000AD  A3 0000000C R			mov f, eax						 ; moves the result in eax to f


 000000B2  A1 00000004 R			mov eax, y						 ; moves y into eax to multiply to get y^3
 000000B7  F7 2D 00000004 R			imul y
 000000BD  F7 2D 00000004 R			imul y
 000000C3  01 05 0000000C R			add f, eax						 ; adds content in eax into f (x^4 + y^3)

 000000C9  A1 00000000 R			mov eax, x						 ; moves x into eax, and adds y to get (x+y)
 000000CE  03 05 00000004 R			add eax, y

 000000D4  A3 00000010 R			mov xy, eax						 ; moves (x+y) into xy 
 000000D9  F7 2D 00000010 R			imul xy							 ; multiply to get (x+y)^4
 000000DF  F7 2D 00000010 R			imul xy
 000000E5  F7 2D 00000010 R			imul xy
 000000EB  F7 2D 00000008 R			imul z							 ; muliply (x+y)^4 with z						


 000000F1  01 05 0000000C R			add f, eax						 ; adds z(x+y)^4 into the f function
 000000F7  A1 00000008 R			mov eax, z						 ;moves z to eax to add to f
 000000FC  01 05 0000000C R			add f, eax
						
 00000102  A1 0000000C R			mov eax, f						 ; moves f into eax

				        dtoa    expr, eax				 ; convert to ASCII characters
				        output  resultLbl, expr          ; output label, and expression

 00000138  B8 00000000		        mov     eax, 0					 ; exit with return code 0
 0000013D  C3			        ret
 0000013E			_MainProc ENDP
				END                             ; end of source code

Microsoft (R) Macro Assembler Version 14.20.27508.1	    05/25/19 12:42:51
example.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000007E Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000013E Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000013E Public


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
expr . . . . . . . . . . . . . .	Byte	 00000072 _DATA	
f  . . . . . . . . . . . . . . .	DWord	 0000000C _DATA	
prompt1  . . . . . . . . . . . .	Byte	 00000014 _DATA	
prompt2  . . . . . . . . . . . .	Byte	 0000001C _DATA	
prompt3  . . . . . . . . . . . .	Byte	 00000024 _DATA	
resultLbl  . . . . . . . . . . .	Byte	 00000054 _DATA	
string . . . . . . . . . . . . .	Byte	 0000002C _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
xy . . . . . . . . . . . . . . .	DWord	 00000010 _DATA	
x  . . . . . . . . . . . . . . .	DWord	 00000000 _DATA	
y  . . . . . . . . . . . . . . .	DWord	 00000004 _DATA	
z  . . . . . . . . . . . . . . .	DWord	 00000008 _DATA	

	   0 Warnings
	   0 Errors
